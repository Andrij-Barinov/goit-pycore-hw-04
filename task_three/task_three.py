# ‚ùó –ó–∞–≤–¥–∞–Ω–Ω—è #3

# –†–æ–∑—Ä–æ–±—ñ—Ç—å —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø—Ä–∏–π–º–∞—î —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –≤ —è–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—É –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞ —ñ –≤—ñ–∑—É–∞–ª—ñ–∑—É—î —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ü—ñ—î—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó, –≤–∏–≤–æ–¥—è—á–∏ —ñ–º–µ–Ω–∞ –≤—Å—ñ—Ö –ø—ñ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π —Ç–∞ —Ñ–∞–π–ª—ñ–≤. –î–ª—è –∫—Ä–∞—â–æ–≥–æ –≤—ñ–∑—É–∞–ª—å–Ω–æ–≥–æ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è, —ñ–º–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π —Ç–∞ —Ñ–∞–π–ª—ñ–≤ –º–∞—é—Ç—å –≤—ñ–¥—Ä—ñ–∑–Ω—è—Ç–∏—Å—è –∑–∞ –∫–æ–ª—å–æ—Ä–æ–º.


# –í–∏–º–æ–≥–∏ –¥–æ –∑–∞–≤–¥–∞–Ω–Ω—è:

# –°—Ç–≤–æ—Ä—ñ—Ç—å –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ –æ—Ç–æ—á–µ–Ω–Ω—è Python –¥–ª—è —ñ–∑–æ–ª—è—Ü—ñ—ó –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç—É.
# –°–∫—Ä–∏–ø—Ç –º–∞—î –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É. –¶–µ–π —à–ª—è—Ö –≤–∫–∞–∑—É—î, –¥–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è, —Å—Ç—Ä—É–∫—Ç—É—Ä—É —è–∫–æ—ó –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏.
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ colorama –¥–ª—è —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∫–æ–ª—å–æ—Ä–æ–≤–æ–≥–æ –≤–∏–≤–µ–¥–µ–Ω–Ω—è.
# –°–∫—Ä–∏–ø—Ç –º–∞—î –∫–æ—Ä–µ–∫—Ç–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ —è–∫ —ñ–º–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π, —Ç–∞–∫ —ñ —ñ–º–µ–Ω–∞ —Ñ–∞–π–ª—ñ–≤, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∏–π —Å–ø–æ—Å—ñ–± –æ–±—Ö–æ–¥—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π (–º–æ–∂–Ω–∞, –∑–∞ –±–∞–∂–∞–Ω–Ω—è–º, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –Ω–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∏–π —Å–ø–æ—Å—ñ–±).
# –ü–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ –≤–∫–∞–∑–∞–Ω–∏–π —à–ª—è—Ö –Ω–µ —ñ—Å–Ω—É—î –∞–±–æ –≤—ñ–Ω –Ω–µ –≤–µ–¥–µ –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó.


# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è:

# –°–ø–æ—á–∞—Ç–∫—É –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É colorama. –î–ª—è —Ü—å–æ–≥–æ —Å—Ç–≤–æ—Ä—ñ—Ç—å —Ç–∞ –∞–∫—Ç–∏–≤—É–π—Ç–µ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ –æ—Ç–æ—á–µ–Ω–Ω—è Python, –∞ –ø–æ—Ç—ñ–º –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –ø–∞–∫–µ—Ç –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é pip.
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–æ–¥—É–ª—å sys –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —à–ª—è—Ö—É –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—É –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞.
# –î–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ñ–∞–π–ª–æ–≤–æ—é —Å–∏—Å—Ç–µ–º–æ—é –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–æ–¥—É–ª—å pathlib.
# –ó–∞–±–µ–∑–ø–µ—á—Ç–µ –Ω–∞–ª–µ–∂–Ω–µ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –≤–∏–≤–æ–¥—É, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ñ—É–Ω–∫—Ü—ñ—ó colorama.


# –ö—Ä–∏—Ç–µ—Ä—ñ—ó –æ—Ü—ñ–Ω—é–≤–∞–Ω–Ω—è:

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ—á–µ–Ω–Ω—è.
# –ü—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–∞ –æ–±—Ä–æ–±–∫–∏ —à–ª—è—Ö—É –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó.
# –¢–æ—á–Ω—ñ—Å—Ç—å –≤–∏–≤–µ–¥–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó.
# –ö–æ—Ä–µ–∫—Ç–Ω–µ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∫–æ–ª—å–æ—Ä–æ–≤–æ–≥–æ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é colorama.
# –Ø–∫—ñ—Å—Ç—å –∫–æ–¥—É, –≤–∫–ª—é—á–∞—é—á–∏ —á–∏—Ç–∞–±–µ–ª—å–Ω—ñ—Å—Ç—å, —Å—Ç—Ä—É–∫—Ç—É—Ä—É–≤–∞–Ω–Ω—è —Ç–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ.


# –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:

# –Ø–∫—â–æ –≤–∏–∫–æ–Ω–∞—Ç–∏ —Å–∫—Ä–∏–ø—Ç —Ç–∞ –ø–µ—Ä–µ–¥–∞—Ç–∏ –π–æ–º—É –∞–±—Å–æ–ª—é—Ç–Ω–∏–π —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä.

# python hw03.py /—à–ª—è—Ö/–¥–æ/–≤–∞—à–æ—ó/–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó

# –¶–µ –ø—Ä–∏–∑–≤–µ–¥–µ –¥–æ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –≤ —Ç–µ—Ä–º—ñ–Ω–∞–ª—ñ —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö –ø—ñ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π —Ç–∞ —Ñ–∞–π–ª—ñ–≤ —É –≤–∫–∞–∑–∞–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º —Ä—ñ–∑–Ω–∏—Ö –∫–æ–ª—å–æ—Ä—ñ–≤ –¥–ª—è –ø—ñ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π —Ç–∞ —Ñ–∞–π–ª—ñ–≤, —â–æ –ø–æ–ª–µ–≥—à–∏—Ç—å –≤—ñ–∑—É–∞–ª—å–Ω–µ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è —Ñ–∞–π–ª–æ–≤–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏.

# –î–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –∑—ñ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é

# üì¶picture
#  ‚î£ üìÇLogo
#  ‚îÉ ‚î£ üìúIBM+Logo.png
#  ‚îÉ ‚î£ üìúibm.svg
#  ‚îÉ ‚îó üìúlogo-tm.png
#  ‚î£ üìúbot-icon.png
#  ‚îó üìúmongodb.jpg

# –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –≤–∏–≤–µ—Å—Ç–∏ —Å—Ö–æ–∂—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É


import sys
from pathlib import Path
from colorama import init, Fore

def list_directory(path, prefix=''):
    # Initializing Colorama for color output
    init()

    try:
        # Check if the path exists and is a directory
        if not path.exists() or not path.is_dir():
            print(Fore.RED + f'Error: Path {path} does not exist or is not a directory.' + Fore.RESET)
            return

        entries = list(path.iterdir())
        entries_count = len(entries)
        for index, item in enumerate(entries):
            connector = "‚îó" if index == entries_count - 1 else "‚î£"
            
            if item.is_dir():  # If the element is a directory
                print(f'{prefix}{connector} üìÇ ' + Fore.BLUE + f'{item.name}/' + Fore.RESET)
                # Recursive call to display the contents of a directory
                extension = "  " if index == entries_count - 1 else "‚îÉ "
                list_directory(item, prefix + extension)
            else:
                print(f'{prefix}{connector} üìú ' + Fore.GREEN + f'{item.name}' + Fore.RESET)

    except PermissionError:
        print(Fore.RED + f'Error accessing {path}' + Fore.RESET)
    except Exception as e:
        print(Fore.RED + f'Error: {e}' + Fore.RESET)

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print(Fore.RED + "Usage: python task_three.py <directory path>" + Fore.RESET)
        sys.exit(1)

    directory_path = Path(sys.argv[1])
    if directory_path.is_dir():
        print(Fore.BLUE + f'üì¶ {directory_path.name}/' + Fore.RESET)  # Display the name of the root directory in blue
        list_directory(directory_path)
    else:
        print(Fore.RED + f'Error: path {directory_path} is not a directory.' + Fore.RESET)